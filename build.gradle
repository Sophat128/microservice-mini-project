plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2022.0.4")
    }

    dependencies {
        if(!project.name.contains("gateway")){
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        }
        if(project.name.contains("task")){

        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
        }
//        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        compileOnly 'org.projectlombok:lombok'
//        runtimeOnly 'org.postgresql:postgresql'
        annotationProcessor 'org.projectlombok:lombok'
        // https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
        implementation 'io.micrometer:micrometer-registry-prometheus:1.11.2'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }


}



tasks.named('test') {
    useJUnitPlatform()
}
